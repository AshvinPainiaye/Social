<?php

namespace Social\Bundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\HttpFoundation\File\File;
use Vich\UploaderBundle\Mapping\Annotation as Vich;

/**
 * Messages
 *
 * @ORM\Table(name="messages")
 * @ORM\Entity(repositoryClass="Social\Bundle\Repository\MessagesRepository")
 * @Vich\Uploadable
 */
class Messages
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
    * @ORM\ManyToOne(targetEntity="User", inversedBy="messageEmetteur")
    */
    private $emetteur;

    /**
    * @ORM\ManyToOne(targetEntity="User", inversedBy="messageRecepteur")
    */
    private $recepteur;


    /**
     * @var string
     *
     * @ORM\Column(name="Message", type="string", length=255)
     */
    private $message;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="date", type="datetime", nullable=true)
     */
    private $date;

    /**
    * NOTE: This is not a mapped field of entity metadata, just a simple property.
    *
    * @Vich\UploadableField(mapping="messages", fileNameProperty="imageName")
    *
    * @var File
    */
    private $imageFile;

    /**
    * @ORM\Column(type="string", length=255, nullable=true)
    *
    * @var string
    */
    private $imageName;

    /**
    * @ORM\Column(type="datetime", nullable=true)
    *
    * @var \DateTime
    */
    private $updatedAt;



    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set message
     *
     * @param string $message
     *
     * @return Messages
     */
    public function setMessage($message)
    {
        $this->message = $message;

        return $this;
    }

    /**
     * Get message
     *
     * @return string
     */
    public function getMessage()
    {
        return $this->message;
    }

    /**
     * Set emetteur
     *
     * @param \Social\Bundle\Entity\User $emetteur
     *
     * @return Messages
     */
    public function setEmetteur(\Social\Bundle\Entity\User $emetteur = null)
    {
        $this->emetteur = $emetteur;

        return $this;
    }

    /**
     * Get emetteur
     *
     * @return \Social\Bundle\Entity\User
     */
    public function getEmetteur()
    {
        return $this->emetteur;
    }

    /**
     * Set recepteur
     *
     * @param \Social\Bundle\Entity\User $recepteur
     *
     * @return Messages
     */
    public function setRecepteur(\Social\Bundle\Entity\User $recepteur = null)
    {
        $this->recepteur = $recepteur;

        return $this;
    }

    /**
     * Get recepteur
     *
     * @return \Social\Bundle\Entity\User
     */
    public function getRecepteur()
    {
        return $this->recepteur;
    }

    /**
    * If manually uploading a file (i.e. not using Symfony Form) ensure an instance
    * of 'UploadedFile' is injected into this setter to trigger the  update. If this
    * bundle's configuration parameter 'inject_on_load' is set to 'true' this setter
    * must be able to accept an instance of 'File' as the bundle will inject one here
    * during Doctrine hydration.
    *
    * @param File|\Symfony\Component\HttpFoundation\File\UploadedFile $image
    *
    * @return Product
    */
    public function setImageFile(File $image = null)
    {
      $this->imageFile = $image;

      if ($image) {
        // It is required that at least one field changes if you are using doctrine
        // otherwise the event listeners won't be called and the file is lost
        $this->updatedAt = new \DateTime('now');
      }

      return $this;
    }

    /**
    * @return File|null
    */
    public function getImageFile()
    {
      return $this->imageFile;
    }

    /**
    * @param string $imageName
    *
    * @return Product
    */
    public function setImageName($imageName)
    {
      $this->imageName = $imageName;

      return $this;
    }

    /**
    * @return string|null
    */
    public function getImageName()
    {
      return $this->imageName;
    }



      /**
       * Set updatedAt
       *
       * @param \DateTime $updatedAt
       * @return Post
       */
      public function setUpdatedAt($updatedAt)
      {
          $this->updatedAt = $updatedAt;

          return $this;
      }

      /**
       * Get updatedAt
       *
       * @return \DateTime
       */
      public function getUpdatedAt()
      {
          return $this->updatedAt;
      }


}
